{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Naya DevOps - VPC with a web server in a public subnet ",
    "Parameters": {
        "VPCCIDR": {
            "Description": "CIDR Block for VPC",
            "Type": "String",
            "Default": "10.200.0.0/20",
            "AllowedValues": [ "10.200.0.0/20" ]
        },
        "PublicSubnet1Param": {
            "Description": "Public Subnet 1",
            "Type": "String",
            "Default": "10.200.0.0/24",
            "AllowedValues": [ "10.200.0.0/24" ]
        },
        "PrivateSubnet1Param": {
            "Description": "Private Subnet 1",
            "Type": "String",
            "Default": "10.200.2.0/23",
            "AllowedValues": [ "10.200.2.0/23" ]
        },
        "KeyName": {
            "Type": "String",
            "Description": "Keyname for the keypair"
        }
    },
 "Mappings": {
    "AWSRegionToAMI": {
      "us-east-1":      { "AMI": "ami-c58c1dd3" },
      "us-east-2":      { "AMI": "ami-4191b524" },
      "us-west-1":      { "AMI": "ami-7a85a01a" },
      "us-west-2":      { "AMI": "ami-4836a428" },
      "ca-central-1":   { "AMI": "ami-0bd66a6f" },
      "eu-west-1":      { "AMI": "ami-01ccc867" },
      "eu-west-2":      { "AMI": "ami-b6daced2" },
      "eu-central-1":   { "AMI": "ami-b968bad6" },
      "sa-east-1":      { "AMI": "ami-37cfad5b" },
      "ap-southeast-1": { "AMI": "ami-fc5ae39f" },
      "ap-southeast-2": { "AMI": "ami-162c2575" },
      "ap-south-1":     { "AMI": "ami-52c7b43d" },
      "ap-northeast-1": { "AMI": "ami-923d12f5" },
      "ap-northeast-2": { "AMI": "ami-9d15c7f3" }
     }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VPCCIDR"
                },
                "Tags": [
                    {
                        "Key": "VPC",
                        "Value": "Naya DevOps, Lab3"
                    },
                    {
                        "Key": "Name",
                        "Value": {
                          "Fn::Join": [
                            "", [
                             "VPC-",
                             {"Ref": "AWS::StackName"}
                            ]
                          ]
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "DependsOn": "VPC"
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "DependsOn": ["VPC", "InternetGateway"],
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "InternetGatewayId": {"Ref": "InternetGateway"}
            }
        },
        "PublicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PublicSubnet1Param"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "MapPublicIpOnLaunch" : "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                                "Fn::Join": [
                                    "", [
                                    "Public Subnet 1 -",
                                    {"Ref": "AWS::StackName"}
                                    ]
                                ]                        
                        }
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": ["VPC", "AttachGateway"],
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": 
                        {
                            "Fn::Join": [
                                "", [
                                "Public Route Table -",
                                {"Ref": "AWS::StackName"}
                                ]
                            ]                        
                    }                        
                    }
                ]
            }
        },
        "PublicRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": ["VPC", "PublicRouteTable", "InternetGateway", "AttachGateway"],
            "Properties": {
                "RouteTableId": {"Ref": "PublicRouteTable"},
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {"Ref": "InternetGateway"}
            }
        },
        "PublicSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["PublicRouteTable", "PublicSubnet1"],
            "Properties": {
                "SubnetId": {"Ref": "PublicSubnet1"},
                "RouteTableId": {"Ref": "PublicRouteTable"}
            }
        },
        "PrivateSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "DependsOn": "VPC",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": {
                    "Ref": "PrivateSubnet1Param"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": 
                        {
                            "Fn::Join": [
                                "", [
                                "Private Subnet 1 -",
                                {"Ref": "AWS::StackName"}
                                ]
                            ]                        
                    }                         
                    }
                ]
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "DependsOn": ["VPC"],
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Private Route Table 1"
                    }
                ]
            }
        },
        "PrivateRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": ["VPC", "PrivateRouteTable", "NATGateway"],
            "Properties": {
                "RouteTableId": {"Ref": "PrivateRouteTable"},
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {"Ref": "NATGateway"}
            }
        },
        "PrivateSubnet1RouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DependsOn": ["PrivateRouteTable", "PrivateSubnet1"],
            "Properties": {
                "SubnetId": {"Ref": "PrivateSubnet1"},
                "RouteTableId": {"Ref": "PrivateRouteTable"}
            }
        },
        "NATGateway" : {
            "DependsOn" : "AttachGateway",
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
                "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
                "SubnetId" : { "Ref" : "PublicSubnet1"}
            }
        },
        "EIP" : {
          "Type" : "AWS::EC2::EIP",
          "Properties" : {
            "Domain" : "vpc"
          }
        },
        "WebServer": {
            "Type": "AWS::EC2::Instance",
            "DependsOn": "VPC",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSRegionToAMI",
                        {
                            "Ref": "AWS::Region"
                        },
                        "AMI"
                    ]
                },
                "IamInstanceProfile" : "EC2_devops",
                "UserData" : { "Fn::Base64":
                    { "Fn::Join": [ "", [
                        "#!/bin/bash\n",
                        "yum update -y\n",
                        "yum install -y httpd php\n",
                        "wget https://us-west-2-tcprod.s3.amazonaws.com/courses/ILT-TF-100-ARCHIT/v6.0.0/lab-3-ha/scripts/inventory-app.zip\n",
                        "unzip inventory-app.zip -d /var/www/html/\n",
                        "wget https://github.com/aws/aws-sdk-php/releases/download/3.62.3/aws.zip\n",
                        "unzip aws -d /var/www/html\n",
                        "chkconfig httpd on\n",
                        "service httpd start\n"                        
                    ] ]
                    }},               
                "KeyName": {"Ref": "KeyName"},
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "DeviceIndex": "0",
                        "AssociatePublicIpAddress": "true",
                        "SubnetId": { "Ref": "PublicSubnet1" },
                        "GroupSet": [{ "Ref": "ConfigServerSG" }]
                    }
                ],
                "SourceDestCheck": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                              "", [
                               "Configuration Server-",
                               {"Ref": "AWS::StackName"}
                              ]
                            ]
                          }
                    }
                ]
            }
        },
        "WebServerSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "VPC",
            "Properties": {
                "GroupDescription": "Security group for the web servers",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags" : [
                    {
                        "Key": "Name",
                        "Value": "Web Server SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        },
        "ConfigServerSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "DependsOn": "VPC",
            "Properties": {
                "GroupDescription": "Security group for the configuration server",
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags" : [
                    {
                        "Key": "Name",
                        "Value": "Configuration Server SG"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ]
            }
        }
    }
}
